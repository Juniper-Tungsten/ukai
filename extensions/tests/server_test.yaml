test_suite:
  before_each:
  - read_config: path="{{ __dir__ }}/../../gohan.yaml"
  - command: rm ./test.db
    rescue: []
  tests:
  - name: Test server resource
    test:
    - include: ../image.yaml
    - include: ../server.yaml
    - include: ../security_group.yaml
    - include: ../local_network.yaml
    - include: ../network.yaml
    - include: ../util.yaml
    - gohan_load_schema: src="{{ __dir__ }}/../../schema/schema.yaml"
    - connect_db: db_type=sqlite3 connection=./test.db
      register: db
    - init_db: db_type=sqlite3 connection=./test.db
    - setup_resources:
        db: $db
    - transaction:
      - db_list:
          tx: $transaction
          schema_id: network
        register: networks
      - associate_route_target:
          transaction: $transaction
          network: $item
        with_items: $networks
    - transaction:
        - db_list:
            tx: $transaction
            schema_id: local_network
          register: local_networks
    - transaction:
      - create_local_network:
          local_network: $item
          transaction: $transaction
      with_items: $local_networks
    - get_config: key="keystone"
      register: keystone_config
    - uuid:
      register: image_id
    - uuid:
      register: server_id
    - vars:
        network_id: 6bfafb2a-bc4b-4655-a5a6-8b760df60e16
    - vars:
        image:
          id: "{{ image_id }}"
          url: https://github.com/nati/contrail-misc/raw/master/images/tinycore-in-network.qcow2
          name: upload_test
          disk_format: qcow2
        security_group1:
          id: 081b50d0-c6e0-11e5-a837-0800200c9a66
          name: security_group1
          tenant_id: admin
        server:
          id: "{{ server_id }}"
          name: test
          image_id: "{{ image_id }}"
          network_id: "{{ network_id }}"
          security_group_id: 081b50d0-c6e0-11e5-a837-0800200c9a66
    - transaction:
      - security_group_resource:
          transaction: $transaction
          security_group: $security_group1
          event_type: post_create_in_transaction
    - security_group_resource:
        transaction: $transaction
        security_group: $security_group1
        event_type: post_create
        db: $db
    - transaction:
      - db_create:
          tx: $transaction
          schema_id: image
          data: $image
      - image_resource:
          client: client
          image: $image
          transaction: $transaction
          event_type: post_create_in_transaction
      - db_create:
          tx: $transaction
          schema_id: server
          data: $server
      - server_resource:
          client: $client
          server: $server
          transaction: $transaction
          event_type: post_create_in_transaction
    - image_resource:
        image: $image
        db: $db
        event_type: post_create
    - transaction:
      - db_list:
          tx: $transaction
          schema_id: location
        register: locations
    - blocks:
      - get_config: key="keystone"
        register: keystone_config
      - get_openstack_client:
          auth_url: "{{ item.keystone_endpoint }}"
          user_name: "{{ keystone_config.user_name }}"
          password: "{{ keystone_config.password }}"
          version: v2.0
          tenant_name:  "{{ keystone_config.tenant_name }}"
        register: client
      - openstack_endpoint: client=$client endpoint_type=image region="{{ item.location.region }}"
        register: url
      - openstack_get:
          client: $client
          url: "{{ url }}/images/{{ image.id }}"
        retries: 60
        delay: 3
      with_items: $locations
    - server_resource:
        client: $client
        server: $server
        db: $db
        event_type: post_create
    - server_resource:
        client: $client
        server: $server
        db: $db
        event_type: pre_delete
    - image_resource:
        client: $client
        image: $image
        db: $db
        event_type: pre_delete
    - security_group_resource:
        transaction: $transaction
        security_group: $security_group2
        event_type: pre_delete
        db: $db