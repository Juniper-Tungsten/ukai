- vars:
    gohan_url: "${ GetTestServerURL(server) }"
    red_id: CB866F85-E87A-4754-84BD-01A5DC970750
    blue_id: 7D498C24-7BEF-48B7-BE9B-88B688135D10
    tokyo_id: F8EEB33F-87B7-4975-920B-3F9CF7B75B4F
    sf_id: DBE0C7FB-34F4-4B91-87D5-470578EDC5A2
    paris_id: 1D4FBF8F-60FC-4443-AD3D-AE61DF0561A9
    sg_id: B4508372-2553-4643-9481-BFAB978997E5
    sg_rule_id: B4508372-2553-4643-9481-BFAB978997E5
    server_id: FCDAC8D4-A110-432B-8623-A0CCC86AA969
    image_id: 7940A908-CCD4-4F97-8979-D169B66019B2
    flavor_id: CE72BEBC-20EC-4D85-A8EC-D9498998DB5F
    service_template_id: 16F175A5-0615-4EF8-A820-826941AF5ECF
    service_instance_id: 2D4C403C-207F-486F-B1BF-C71AD588EDB0
    network_policy_id: 7AB4BF15-F587-4B83-AC7A-487686D8C9EC
    heat_template_id: 6D7CC78D-A974-4E3C-A6A8-2D47BF9C879A
    heat_instance_id: D9D72EA1-C296-44FF-B619-55B1244FC20E
- vars:
    test_data:
    - path: "{{ gohan_url }}/v1.0/admin/id_pools"
      data:
        start: 1000
        end: 1002
        name: route_target
        assigned: false
    - path: "{{ gohan_url }}/v1.0/admin/id_pools"
      data:
        start: 1000
        end: 1002
        name: virtual_network_id
        assigned: false
    - path: "{{ gohan_url }}/v1.0/admin/id_pools"
      data:
        start: 1000
        end: 1002
        name: security_group
        assigned: false
    - path: "{{ gohan_url }}/v1.0/tenant/networks"
      data:
        id: $blue_id
        name: $blue_id
        cidr: 10.0.0.0/20
        local_prefix_len: 24
    - path: "{{ gohan_url }}/v1.0/tenant/networks"
      data:
        id: $red_id
        name: $red_id
        cidr: 20.0.0.0/20
        local_prefix_len: 24
    - path: "{{ gohan_url }}/v1.0/admin/route_target_associations"
      data:
        network_id: $red_id
        route_target: 2000
    - path: "{{ gohan_url }}/v1.0/tenant/security_groups"
      data:
        id: $sg_id
        name: $sg_id
    - path: "{{ gohan_url }}/v1.0/tenant/security_group_rules"
      data:
        id: $sg_rule_id
        name: $sg_rule_id
        security_group_id: $sg_id
        ethertype: IPv4
        protocol: tcp
        port_range_min: 80
        port_range_max: 80
        direction: egress
        remote_ip_prefix: 10.0.0.0/24
    - path: "{{ gohan_url }}/v1.0/tenant/images"
      data:
        id: "{{ image_id }}"
        url: ${GetConfig("image_url", "")}
        name: upload_test
        disk_format: qcow2
    - path: "{{ gohan_url }}/v1.0/tenant/flavors"
      data:
        id: "{{ flavor_id }}"
        ram: 124
        disk: 1
        vcpus: 1
        name: global.m1.nano
    - path: "{{ gohan_url }}/v1.0/servers"
      data:
        id: $server_id
        name: $server_id
        image_id: $image_id
        network_id: $blue_id
        security_group_id: $sg_id
        flavor_id: $flavor_id
    - path: "{{ gohan_url }}/v1.0/tenant/service_templates"
      data:
        id: $service_template_id
        name: test_service_template
        image_id: $image_id
        flavor_id: $flavor_id
        availability_zone_enable: false
        interface_type:
          -
            static_route_enable: false
            shared_ip: false
            service_interface_type: "management"
          -
            static_route_enable: false
            shared_ip: false
            service_interface_type: "left"
          -
            static_route_enable: false
            shared_ip: false
            service_interface_type: "right"
    - path: "{{ gohan_url }}/v1.0/tenant/service_instances"
      data:
        id: $service_instance_id
        name: test_service_instance
        service_template_id: $service_template_id
        service_instance_properties:
          scale_out:
            max_instances: 1
          interface_list:
            -
              virtual_network: "any"
            -
              virtual_network: "any"
            -
              virtual_network: "any"
    - path: "{{ gohan_url }}/v1.0/tenant/network_policies"
      data:
        id: $network_policy_id
        source_network_id: $blue_id
        dest_network_id: $red_id
        entries:
        - action_list:
            simple_action: pass
          direction: "<>"
          protocol: any
          application: []
          rule_sequence:
            major: -1
            minor: -1
          src_addresses:
          - virtual_network: "default-domain:admin:blue"
          dst_addresses:
          - virtual_network: "default-domain:admin:red"
          src_ports:
          - start_port: -1
            end_port: -1
          dst_ports:
          - start_port: -1
            end_port: -1
    - path: "{{ gohan_url }}/v1.0/tenant/heat_templates"
      data:
        id: $heat_template_id
        name: heat_template
        template: |
            heat_template_version: 2013-05-23
            parameters:
                flavor:
                    type: string
                    description: Flavor for the server to be created
                    default: m1.tiny
                    constraints:
                    - custom_constraint: nova.flavor
                image:
                    type: string
                    description: Image ID or image name to use for the server
                    constraints:
                    - custom_constraint: glance.image
                networks:
                  - network : { get_param : network_id }
            resources:
                server:
                    type: OS::Nova::Server
                    properties:
                        image: { get_param: image }
                        flavor: { get_param: flavor }
                        networks:
                        - network : { get_param : network_id }
            outputs:
                server_networks:
                    description: The networks of the deployed server
                    value: { get_attr: [server, networks] }
    - path: "{{ gohan_url }}/v1.0/tenant/heat_instances"
      data:
        heat_instance:
          id: $heat_instance_id
          name: heat_instance
          heat_template_id: $heat_template_id
          parameters:
            flavor: m1.tiny
            image: tinycore
    delete_path:
    - "{{ gohan_url }}/v1.0/tenant/heat_instances/{{ heat_instance_id }}"
    - "{{ gohan_url }}/v1.0/tenant/heat_templates/{{ heat_template_id }}"
    - "{{ gohan_url }}/v1.0/tenant/network_policies/{{ network_policy_id }}"
    - "{{ gohan_url }}/v1.0/tenant/service_instances/{{ service_instance_id }}"
    - "{{ gohan_url }}/v1.0/tenant/service_templates/{{ service_template_id }}"
    - "{{ gohan_url }}/v1.0/servers/{{ server_id }}"
    - "{{ gohan_url }}/v1.0/tenant/images/{{ image_id }}"
    - "{{ gohan_url }}/v1.0/tenant/security_groups/{{ sg_id }}"
    - "{{ gohan_url }}/v1.0/tenant/networks/{{ blue_id }}"
    - "{{ gohan_url }}/v1.0/tenant/networks/{{ red_id }}"
    - "{{ gohan_url }}/v1.0/locations/{{ tokyo_id }}"
    - "{{ gohan_url }}/v1.0/locations/{{ sf_id }}"